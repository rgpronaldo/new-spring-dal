<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
		
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="filters" value="stat,slf4j,wall" />

		<property name="maxActive" value="${jdbc.max_active}" />
		<property name="initialSize" value="${jdbc.initial_size}" />
		<property name="maxWait" value="${jdbc.max_wait}" />
		<property name="minIdle" value="${jdbc.min_idle}" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>
	
	<bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url.1}" />
		<property name="username" value="${jdbc.username.1}" />
		<property name="password" value="${jdbc.password.1}" />

		<property name="filters" value="stat,slf4j,wall" />

		<property name="maxActive" value="${jdbc.max_active}" />
		<property name="initialSize" value="${jdbc.initial_size}" />
		<property name="maxWait" value="${jdbc.max_wait}" />
		<property name="minIdle" value="${jdbc.min_idle}" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:/mybatis/mapper/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="one.rangp.metadata.dao.mapper" />
		<property name="markerInterface" value="one.rangp.metadata.dao.BaseDao" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="DataSourceKeyHashRule" class="one.dal.support.impl.rules.DataSourceKeyHashRule">
		<property name="field" value="userId"></property>
		<property name="from" value="0"></property>
		<property name="to" value="100"></property>
		<property name="readonly" value="false"></property>
		<property name="dataSourceKey" value="dataSourceKey"></property>
	</bean>
	<bean id="DataSourceKeyHashRule1" class="one.dal.support.impl.rules.DataSourceKeyHashRule">
		<property name="field" value="userId"></property>
		<property name="from" value="100"></property>
		<property name="to" value="200"></property>
		<property name="readonly" value="false"></property>
		<property name="dataSourceKey" value="dataSourceKey1"></property>
	</bean>
	
	<bean id="DefaultDataSourceKeyDeterminer" class="one.dal.support.impl.DefaultDataSourceKeyDeterminer">
	   <property name="rules">
	    <list>
		    <ref bean="DataSourceKeyHashRule"/>
		    <ref bean="DataSourceKeyHashRule1"/>
	    </list>
	   </property>
	   <property name="defaultDataSourceKey" value="dataSourceKey"/>
	</bean>
	
	<bean id="multipleDataSource" class="one.dal.support.DynamicDataSource">
        <property name="defaultTargetDataSource" ref="dataSource"/>
        <property name="targetDataSources">
            <map>
                <entry key="dataSourceKey" value-ref="dataSource"/>
                <entry key="dataSourceKey1" value-ref="dataSource1"/>
            </map>
        </property>
    </bean>
	
	<bean id="DataSourceAspect" class="one.dal.support.DataSourceAspect"></bean>
	<aop:config>
	 <aop:aspect id="test" ref="DataSourceAspect">
	    <aop:pointcut expression="execution(* one.rangp.dal.test.service.*.*(..))" id="aspectBefore"/>
	   <aop:before method="before"  pointcut-ref="aspectBefore"/>
	 </aop:aspect>
	</aop:config>
	
	
</beans>